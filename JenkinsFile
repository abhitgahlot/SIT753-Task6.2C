pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                echo "Using Gradle to build the code"
                
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo "Using Junit to run unit tests"
                
                echo "Using selenium to run integration tests."
                
            }
            post{
                success{
                    mail to: "abhit.gahlot96@gmail.com",
                    subject: "Success - App Tests Report",
                    body: "Test passed successfully - logs attached"
                }
                failure{
                    mail to: "abhit.gahlot96@gmail.com",
                    subject: "Failure - App Tests Report",
                    body: "Test failed - logs attached"
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Using SonarQube for code analysis'
                
            }
        }
        
        stage('Security Scan') {
            steps {
                echo "Using OWASP for security scan"
                
            }
            post{
                always{
                    mail to: "abhit.gahlot96@gmail.com",
                    subject: "OWASP Security scan report",
                    body: "Please find the OWASP security scan report attached - logs attached"
                }
            }
        }

        
        stage('Deploy to Staging') {
            steps {
                echo "Deploying to Staging environment on AWS EC2 instance"
                
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                echo "Using Selenium to run Integration tests on stage"
                
            }
        }
         stage('Deploy to Production') {
            steps {
                echo "Deploying to Production environment on AWS EC2 instances"
                
            }
        }
    }
}
